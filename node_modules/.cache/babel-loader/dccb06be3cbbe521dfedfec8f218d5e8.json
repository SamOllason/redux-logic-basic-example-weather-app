{"ast":null,"code":"import _classCallCheck from \"/Users/samollason/Documents/Develop/Web/simple-weather-app-redux-logic-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/samollason/Documents/Develop/Web/simple-weather-app-redux-logic-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/samollason/Documents/Develop/Web/simple-weather-app-redux-logic-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/samollason/Documents/Develop/Web/simple-weather-app-redux-logic-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/samollason/Documents/Develop/Web/simple-weather-app-redux-logic-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/samollason/Documents/Develop/Web/simple-weather-app-redux-logic-example/src/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { incrementNumberOfRequestsMade, getWeatherData } from './actions';\nimport cityTypes from './static/cityTypes';\nimport appStyles from './styles/appStyles';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      selectedCity: '-'\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      console.log({\n        nextProps: nextProps\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(city) {\n      this.props.actions.incrementNumberOfRequestsMade();\n      this.setState({\n        selectedCity: city\n      });\n      this.props.actions.getWeatherData(city);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var weatherSummaryComponent = this.props.isFetching ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Fetching...\") : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, this.props.weatherSummary));\n      return React.createElement(\"div\", {\n        style: appStyles.wholeApp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Weather app powered by Redux and Redux-Logic\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Article:\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Source code here:\"), React.createElement(\"div\", {\n        style: appStyles.topContainerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Click on a city to show the weather there\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.handleClick(cityTypes.London);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, cityTypes.London), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.handleClick(cityTypes.Paris);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, cityTypes.Paris), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.handleClick(cityTypes.New_York);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"'\", cityTypes.New_York)), React.createElement(\"div\", {\n        style: appStyles.bottomContainerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Selected City: \", React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.state.selectedCity))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Weather in Selected City: \", weatherSummaryComponent), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Number of requests made:\", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.props.numberOfRequests))));\n    }\n  }]);\n\n  return App;\n}(Component);\n/*\n     mapDispatchToProps\n\n     Allows us to pass the dispatch methods as callbacks via props\n     into our view layer. This way our component can easily\n     dispatch actions through action-creator functions. This is cleaner\n     than having components dispatch actions themselves\n\n */\n\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators({\n      incrementNumberOfRequestsMade: incrementNumberOfRequestsMade,\n      getWeatherData: getWeatherData\n    }, dispatch)\n  };\n};\n/*\n    mapStateToProps\n\n    Allows us to pass central application state as read-only props to our component.\n */\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isFetching: state.weatherDataHandling.isFetching,\n    weatherSummary: state.weatherDataHandling.weatherSummary,\n    numberOfRequests: state.requestLogging.numberOfRequests\n  };\n}; // We use the connect feature of react-redux to bind and subscribe our component\n// to our Redux Store. This way, whenever the state is changed in the Store\n// the relevant changes will be automatically propagated to this component\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/samollason/Documents/Develop/Web/simple-weather-app-redux-logic-example/src/App.js"],"names":["React","Component","connect","bindActionCreators","incrementNumberOfRequestsMade","getWeatherData","cityTypes","appStyles","App","props","state","selectedCity","nextProps","console","log","city","actions","setState","weatherSummaryComponent","isFetching","weatherSummary","wholeApp","topContainerStyle","handleClick","London","Paris","New_York","bottomContainerStyle","numberOfRequests","mapDispatchToProps","dispatch","mapStateToProps","weatherDataHandling","requestLogging"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { incrementNumberOfRequestsMade, getWeatherData} from './actions'\nimport cityTypes from './static/cityTypes';\nimport appStyles from './styles/appStyles';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectedCity: '-'\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        console.log({\n            nextProps: nextProps\n        });\n    }\n\n    handleClick(city){\n        this.props.actions.incrementNumberOfRequestsMade();\n\n        this.setState({\n            selectedCity: city\n        });\n\n        this.props.actions.getWeatherData(city);\n    }\n  render() {\n\n      const weatherSummaryComponent = this.props.isFetching ?\n          <div>\n              Fetching...\n          </div>\n          :\n          <div>\n            <b>{this.props.weatherSummary}</b>\n          </div>;\n\n\n    return (\n      <div style={appStyles.wholeApp}>\n\n          <h1>Weather app powered by Redux and Redux-Logic</h1>\n          <h3>Article:</h3>\n          <h3>Source code here:</h3>\n\n\n          <div style={appStyles.topContainerStyle}>\n            <div>Click on a city to show the weather there</div>\n            <button onClick={() => this.handleClick(cityTypes.London)}>{cityTypes.London}</button>\n            <button onClick={() => this.handleClick(cityTypes.Paris)}>{cityTypes.Paris}</button>\n            <button onClick={() => this.handleClick(cityTypes.New_York)}>'{cityTypes.New_York}</button>\n        </div>\n          <div style={appStyles.bottomContainerStyle}>\n              <div>Selected City: <div><b>{this.state.selectedCity}</b></div></div>\n            <div>Weather in Selected City: {weatherSummaryComponent}</div>\n            <div>Number of requests made:<b>{this.props.numberOfRequests}</b></div>\n          </div>\n      </div>\n    );\n  }\n}\n\n/*\n     mapDispatchToProps\n\n     Allows us to pass the dispatch methods as callbacks via props\n     into our view layer. This way our component can easily\n     dispatch actions through action-creator functions. This is cleaner\n     than having components dispatch actions themselves\n\n */\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        actions: bindActionCreators({\n            incrementNumberOfRequestsMade,\n            getWeatherData,\n\n        }, dispatch)\n    };\n};\n\n/*\n    mapStateToProps\n\n    Allows us to pass central application state as read-only props to our component.\n */\n\nconst mapStateToProps = (state) => {\n    return {\n        isFetching: state.weatherDataHandling.isFetching,\n        weatherSummary: state.weatherDataHandling.weatherSummary,\n\n        numberOfRequests: state.requestLogging.numberOfRequests\n    };\n};\n\n// We use the connect feature of react-redux to bind and subscribe our component\n// to our Redux Store. This way, whenever the state is changed in the Store\n// the relevant changes will be automatically propagated to this component\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App);\n"]},"metadata":{},"sourceType":"module"}